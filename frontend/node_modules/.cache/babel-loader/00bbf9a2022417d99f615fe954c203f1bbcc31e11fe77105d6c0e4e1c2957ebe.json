{"ast":null,"code":"var _jsxFileName = \"D:\\\\Windows\\\\Web Apps\\\\GenAI\\\\frontend\\\\src\\\\Components\\\\Chat.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect } from \"react\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Chat({\n  chatId\n}) {\n  _s();\n  const id = chatId;\n  const [message, setMessage] = React.useState([]);\n  const token = localStorage.getItem(\"token\");\n  const fetchMessages = async () => {\n    const body = {\n      chatId: id\n    };\n    const config = {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: `Bearer ${token}`\n      }\n    };\n    const response = await axios.post(`${process.env.REACT_APP_SERVER_ENDPOINT}/getMessages`, body, config);\n    // const data = await response.json();\n    console.log(response);\n  };\n  useEffect(() => {\n    fetchMessages();\n  }, [id]);\n\n  //   console.log(id);\n  //   function formatFirebaseSetupGuide(input) {\n  //     // Replace specific markdown-like patterns with HTML tags\n  //     let formattedText = input\n  //       .replace(/^##\\s(.+)$/gm, \"<h2>$1</h2>\") // Convert ## headers to <h2>\n  //       .replace(/^###\\s(.+)$/gm, \"<h3>$1</h3>\") // Convert ### headers to <h3>\n  //       .replace(/^\\*\\*\\s(.+):\\s*\\*\\*/gm, \"<strong>$1:</strong>\") // Convert **Text:** to <strong>Text:</strong>\n  //       .replace(/^\\* (.+)$/gm, \"<li>$1</li>\") // Convert * items to <li>\n  //       .replace(\n  //         /^```(javascript)?$/gm,\n  //         '<pre><code class=\"language-javascript\">'\n  //       ) // Convert ```javascript to <pre><code>\n  //       .replace(/^```$/gm, \"</code></pre>\") // Convert ``` to </code></pre>\n  //       .replace(\n  //         /\\[([^\\]]+)\\]\\(([^\\)]+)\\)/g,\n  //         '<a href=\"$2\" target=\"_blank\" rel=\"noopener noreferrer\">$1</a>'\n  //       ) // Convert [text](url) to <a href=\"url\">text</a>\n  //       .replace(/\\n\\n/g, \"</p><p>\") // Convert double newlines to paragraph breaks\n  //       .replace(/\\n/g, \"<br/>\"); // Convert single newlines to <br/>\n\n  //     // Wrap the entire text in a <div>\n  //     formattedText = `<div>${formattedText}</div>`;\n\n  //     // Return the formatted HTML\n  //     return formattedText;\n  //   }\n\n  //   console.log(formatFirebaseSetupGuide(text));\n  //   const formattedHTML = formatFirebaseSetupGuide(text);\n\n  //   return <div dangerouslySetInnerHTML={{ __html: formattedHTML }} />;\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"flex-1 border border-black\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 66,\n    columnNumber: 5\n  }, this);\n}\n_s(Chat, \"+AkkQNjth8UU2+OuxvcDlyoPmxg=\");\n_c = Chat;\nexport default Chat;\nvar _c;\n$RefreshReg$(_c, \"Chat\");","map":{"version":3,"names":["React","useEffect","axios","jsxDEV","_jsxDEV","Chat","chatId","_s","id","message","setMessage","useState","token","localStorage","getItem","fetchMessages","body","config","headers","Authorization","response","post","process","env","REACT_APP_SERVER_ENDPOINT","console","log","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["D:/Windows/Web Apps/GenAI/frontend/src/Components/Chat.js"],"sourcesContent":["import React, { useEffect } from \"react\";\r\nimport axios from \"axios\";\r\n\r\nfunction Chat({ chatId }) {\r\n  const id = chatId;\r\n  const [message, setMessage] = React.useState([]);\r\n\r\n  const token = localStorage.getItem(\"token\");\r\n\r\n  const fetchMessages = async () => {\r\n    const body = {\r\n      chatId: id,\r\n    };\r\n    const config = {\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        Authorization: `Bearer ${token}`,\r\n      },\r\n    };\r\n    const response = await axios.post(\r\n      `${process.env.REACT_APP_SERVER_ENDPOINT}/getMessages`,\r\n      body,\r\n      config\r\n    );\r\n    // const data = await response.json();\r\n    console.log(response);\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchMessages();\r\n  }, [id]);\r\n\r\n  //   console.log(id);\r\n  //   function formatFirebaseSetupGuide(input) {\r\n  //     // Replace specific markdown-like patterns with HTML tags\r\n  //     let formattedText = input\r\n  //       .replace(/^##\\s(.+)$/gm, \"<h2>$1</h2>\") // Convert ## headers to <h2>\r\n  //       .replace(/^###\\s(.+)$/gm, \"<h3>$1</h3>\") // Convert ### headers to <h3>\r\n  //       .replace(/^\\*\\*\\s(.+):\\s*\\*\\*/gm, \"<strong>$1:</strong>\") // Convert **Text:** to <strong>Text:</strong>\r\n  //       .replace(/^\\* (.+)$/gm, \"<li>$1</li>\") // Convert * items to <li>\r\n  //       .replace(\r\n  //         /^```(javascript)?$/gm,\r\n  //         '<pre><code class=\"language-javascript\">'\r\n  //       ) // Convert ```javascript to <pre><code>\r\n  //       .replace(/^```$/gm, \"</code></pre>\") // Convert ``` to </code></pre>\r\n  //       .replace(\r\n  //         /\\[([^\\]]+)\\]\\(([^\\)]+)\\)/g,\r\n  //         '<a href=\"$2\" target=\"_blank\" rel=\"noopener noreferrer\">$1</a>'\r\n  //       ) // Convert [text](url) to <a href=\"url\">text</a>\r\n  //       .replace(/\\n\\n/g, \"</p><p>\") // Convert double newlines to paragraph breaks\r\n  //       .replace(/\\n/g, \"<br/>\"); // Convert single newlines to <br/>\r\n\r\n  //     // Wrap the entire text in a <div>\r\n  //     formattedText = `<div>${formattedText}</div>`;\r\n\r\n  //     // Return the formatted HTML\r\n  //     return formattedText;\r\n  //   }\r\n\r\n  //   console.log(formatFirebaseSetupGuide(text));\r\n  //   const formattedHTML = formatFirebaseSetupGuide(text);\r\n\r\n  //   return <div dangerouslySetInnerHTML={{ __html: formattedHTML }} />;\r\n\r\n  return (\r\n    <div className=\"flex-1 border border-black\">\r\n      <div></div>\r\n      <div></div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Chat;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,QAAQ,OAAO;AACxC,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,SAASC,IAAIA,CAAC;EAAEC;AAAO,CAAC,EAAE;EAAAC,EAAA;EACxB,MAAMC,EAAE,GAAGF,MAAM;EACjB,MAAM,CAACG,OAAO,EAAEC,UAAU,CAAC,GAAGV,KAAK,CAACW,QAAQ,CAAC,EAAE,CAAC;EAEhD,MAAMC,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;EAE3C,MAAMC,aAAa,GAAG,MAAAA,CAAA,KAAY;IAChC,MAAMC,IAAI,GAAG;MACXV,MAAM,EAAEE;IACV,CAAC;IACD,MAAMS,MAAM,GAAG;MACbC,OAAO,EAAE;QACP,cAAc,EAAE,kBAAkB;QAClCC,aAAa,EAAE,UAAUP,KAAK;MAChC;IACF,CAAC;IACD,MAAMQ,QAAQ,GAAG,MAAMlB,KAAK,CAACmB,IAAI,CAC/B,GAAGC,OAAO,CAACC,GAAG,CAACC,yBAAyB,cAAc,EACtDR,IAAI,EACJC,MACF,CAAC;IACD;IACAQ,OAAO,CAACC,GAAG,CAACN,QAAQ,CAAC;EACvB,CAAC;EAEDnB,SAAS,CAAC,MAAM;IACdc,aAAa,CAAC,CAAC;EACjB,CAAC,EAAE,CAACP,EAAE,CAAC,CAAC;;EAER;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA;;EAEA;EACA;EACA;;EAEA;EACA;;EAEA;;EAEA,oBACEJ,OAAA;IAAKuB,SAAS,EAAC,4BAA4B;IAAAC,QAAA,gBACzCxB,OAAA;MAAAyB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAU,CAAC,eACX5B,OAAA;MAAAyB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAU,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACR,CAAC;AAEV;AAACzB,EAAA,CAnEQF,IAAI;AAAA4B,EAAA,GAAJ5B,IAAI;AAqEb,eAAeA,IAAI;AAAC,IAAA4B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
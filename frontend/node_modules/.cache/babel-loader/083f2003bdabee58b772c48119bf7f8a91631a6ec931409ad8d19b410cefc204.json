{"ast":null,"code":"var _jsxFileName = \"D:\\\\Windows\\\\Web Apps\\\\GenAI\\\\frontend\\\\src\\\\Components\\\\Chat.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect } from \"react\";\nimport axios from \"axios\";\nimport Message from \"./Message\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Chat({\n  chatId\n}) {\n  _s();\n  const id = chatId;\n  const [message, setMessage] = React.useState([]);\n  const token = localStorage.getItem(\"token\");\n  const fetchMessages = async () => {\n    const body = {\n      chatId: id,\n      email: JSON.parse(localStorage.getItem(\"user\")).email\n    };\n    const config = {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: `Bearer ${token}`\n      }\n    };\n    const response = await axios.post(`${process.env.REACT_APP_SERVER_ENDPOINT}/getMessages`, body, config);\n    setMessage(response.data.messages);\n    // const data = await response.json();\n    console.log(response.data.messages);\n  };\n  useEffect(() => {\n    fetchMessages();\n  }, [id]);\n\n  // const time = new Date().toLocaleTimeString(\"en-IN\", {\n  //   hour: \"2-digit\",\n  //   minute: \"2-digit\",\n  //   hour12: true,\n  // });\n\n  // console.log(time);\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"lg:max-w-2xl w-full xl:max-w-3xl mx-auto h-screen\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"overflow-y-scroll scrollbar-hide justify-end h-full\",\n        children: message.map(message => /*#__PURE__*/_jsxDEV(Message, {\n          message: message.message,\n          name: message.name\n        }, message._id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 5\n  }, this);\n}\n_s(Chat, \"+AkkQNjth8UU2+OuxvcDlyoPmxg=\");\n_c = Chat;\nexport default Chat;\nvar _c;\n$RefreshReg$(_c, \"Chat\");","map":{"version":3,"names":["React","useEffect","axios","Message","jsxDEV","_jsxDEV","Chat","chatId","_s","id","message","setMessage","useState","token","localStorage","getItem","fetchMessages","body","email","JSON","parse","config","headers","Authorization","response","post","process","env","REACT_APP_SERVER_ENDPOINT","data","messages","console","log","className","children","map","name","_id","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["D:/Windows/Web Apps/GenAI/frontend/src/Components/Chat.js"],"sourcesContent":["import React, { useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport Message from \"./Message\";\r\n\r\nfunction Chat({ chatId }) {\r\n  const id = chatId;\r\n  const [message, setMessage] = React.useState([]);\r\n\r\n  const token = localStorage.getItem(\"token\");\r\n\r\n  const fetchMessages = async () => {\r\n    const body = {\r\n      chatId: id,\r\n      email: JSON.parse(localStorage.getItem(\"user\")).email,\r\n    };\r\n    const config = {\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        Authorization: `Bearer ${token}`,\r\n      },\r\n    };\r\n    const response = await axios.post(\r\n      `${process.env.REACT_APP_SERVER_ENDPOINT}/getMessages`,\r\n      body,\r\n      config\r\n    );\r\n    setMessage(response.data.messages);\r\n    // const data = await response.json();\r\n    console.log(response.data.messages);\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchMessages();\r\n  }, [id]);\r\n\r\n  // const time = new Date().toLocaleTimeString(\"en-IN\", {\r\n  //   hour: \"2-digit\",\r\n  //   minute: \"2-digit\",\r\n  //   hour12: true,\r\n  // });\r\n\r\n  // console.log(time);\r\n\r\n  return (\r\n    <div className=\"\">\r\n      <div className=\"lg:max-w-2xl w-full xl:max-w-3xl mx-auto h-screen\">\r\n        <div className=\"overflow-y-scroll scrollbar-hide justify-end h-full\">\r\n          {message.map((message) => (\r\n            <Message\r\n              key={message._id}\r\n              message={message.message}\r\n              name={message.name}\r\n            />\r\n          ))}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Chat;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,QAAQ,OAAO;AACxC,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAOC,OAAO,MAAM,WAAW;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEhC,SAASC,IAAIA,CAAC;EAAEC;AAAO,CAAC,EAAE;EAAAC,EAAA;EACxB,MAAMC,EAAE,GAAGF,MAAM;EACjB,MAAM,CAACG,OAAO,EAAEC,UAAU,CAAC,GAAGX,KAAK,CAACY,QAAQ,CAAC,EAAE,CAAC;EAEhD,MAAMC,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;EAE3C,MAAMC,aAAa,GAAG,MAAAA,CAAA,KAAY;IAChC,MAAMC,IAAI,GAAG;MACXV,MAAM,EAAEE,EAAE;MACVS,KAAK,EAAEC,IAAI,CAACC,KAAK,CAACN,YAAY,CAACC,OAAO,CAAC,MAAM,CAAC,CAAC,CAACG;IAClD,CAAC;IACD,MAAMG,MAAM,GAAG;MACbC,OAAO,EAAE;QACP,cAAc,EAAE,kBAAkB;QAClCC,aAAa,EAAE,UAAUV,KAAK;MAChC;IACF,CAAC;IACD,MAAMW,QAAQ,GAAG,MAAMtB,KAAK,CAACuB,IAAI,CAC/B,GAAGC,OAAO,CAACC,GAAG,CAACC,yBAAyB,cAAc,EACtDX,IAAI,EACJI,MACF,CAAC;IACDV,UAAU,CAACa,QAAQ,CAACK,IAAI,CAACC,QAAQ,CAAC;IAClC;IACAC,OAAO,CAACC,GAAG,CAACR,QAAQ,CAACK,IAAI,CAACC,QAAQ,CAAC;EACrC,CAAC;EAED7B,SAAS,CAAC,MAAM;IACde,aAAa,CAAC,CAAC;EACjB,CAAC,EAAE,CAACP,EAAE,CAAC,CAAC;;EAER;EACA;EACA;EACA;EACA;;EAEA;;EAEA,oBACEJ,OAAA;IAAK4B,SAAS,EAAC,EAAE;IAAAC,QAAA,eACf7B,OAAA;MAAK4B,SAAS,EAAC,mDAAmD;MAAAC,QAAA,eAChE7B,OAAA;QAAK4B,SAAS,EAAC,qDAAqD;QAAAC,QAAA,EACjExB,OAAO,CAACyB,GAAG,CAAEzB,OAAO,iBACnBL,OAAA,CAACF,OAAO;UAENO,OAAO,EAAEA,OAAO,CAACA,OAAQ;UACzB0B,IAAI,EAAE1B,OAAO,CAAC0B;QAAK,GAFd1B,OAAO,CAAC2B,GAAG;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAGjB,CACF;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACC;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV;AAACjC,EAAA,CAtDQF,IAAI;AAAAoC,EAAA,GAAJpC,IAAI;AAwDb,eAAeA,IAAI;AAAC,IAAAoC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
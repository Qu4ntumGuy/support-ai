{"ast":null,"code":"var _jsxFileName = \"D:\\\\Windows\\\\Web Apps\\\\GenAI\\\\frontend\\\\src\\\\Components\\\\Chat.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Chat({\n  chatId\n}) {\n  const id = chatId;\n  //   console.log(id);\n\n  function formatFirebaseSetupGuide(input) {\n    // Replace specific markdown-like patterns with HTML tags\n    let formattedText = input.replace(/^##\\s(.+)$/gm, \"<h2>$1</h2>\") // Convert ## headers to <h2>\n    .replace(/^###\\s(.+)$/gm, \"<h3>$1</h3>\") // Convert ### headers to <h3>\n    .replace(/^\\*\\*\\s(.+):\\s*\\*\\*/gm, \"<strong>$1:</strong>\") // Convert **Text:** to <strong>Text:</strong>\n    .replace(/^\\* (.+)$/gm, \"<li>$1</li>\") // Convert * items to <li>\n    .replace(/^```(javascript)?$/gm, '<pre><code class=\"language-javascript\">') // Convert ```javascript to <pre><code>\n    .replace(/^```$/gm, \"</code></pre>\") // Convert ``` to </code></pre>\n    .replace(/\\[([^\\]]+)\\]\\(([^\\)]+)\\)/g, '<a href=\"$2\" target=\"_blank\" rel=\"noopener noreferrer\">$1</a>') // Convert [text](url) to <a href=\"url\">text</a>\n    .replace(/\\n\\n/g, \"</p><p>\") // Convert double newlines to paragraph breaks\n    .replace(/\\n/g, \"<br/>\"); // Convert single newlines to <br/>\n\n    // Wrap the entire text in a <div>\n    formattedText = `<div>${formattedText}</div>`;\n\n    // Return the formatted HTML\n    return formattedText;\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"flex-1\",\n    children: \"Chat\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 10\n  }, this);\n}\n_c = Chat;\nexport default Chat;\nvar _c;\n$RefreshReg$(_c, \"Chat\");","map":{"version":3,"names":["Chat","chatId","id","formatFirebaseSetupGuide","input","formattedText","replace","_jsxDEV","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["D:/Windows/Web Apps/GenAI/frontend/src/Components/Chat.js"],"sourcesContent":["function Chat({ chatId }) {\r\n  const id = chatId;\r\n  //   console.log(id);\r\n\r\n  function formatFirebaseSetupGuide(input) {\r\n    // Replace specific markdown-like patterns with HTML tags\r\n    let formattedText = input\r\n      .replace(/^##\\s(.+)$/gm, \"<h2>$1</h2>\") // Convert ## headers to <h2>\r\n      .replace(/^###\\s(.+)$/gm, \"<h3>$1</h3>\") // Convert ### headers to <h3>\r\n      .replace(/^\\*\\*\\s(.+):\\s*\\*\\*/gm, \"<strong>$1:</strong>\") // Convert **Text:** to <strong>Text:</strong>\r\n      .replace(/^\\* (.+)$/gm, \"<li>$1</li>\") // Convert * items to <li>\r\n      .replace(\r\n        /^```(javascript)?$/gm,\r\n        '<pre><code class=\"language-javascript\">'\r\n      ) // Convert ```javascript to <pre><code>\r\n      .replace(/^```$/gm, \"</code></pre>\") // Convert ``` to </code></pre>\r\n      .replace(\r\n        /\\[([^\\]]+)\\]\\(([^\\)]+)\\)/g,\r\n        '<a href=\"$2\" target=\"_blank\" rel=\"noopener noreferrer\">$1</a>'\r\n      ) // Convert [text](url) to <a href=\"url\">text</a>\r\n      .replace(/\\n\\n/g, \"</p><p>\") // Convert double newlines to paragraph breaks\r\n      .replace(/\\n/g, \"<br/>\"); // Convert single newlines to <br/>\r\n\r\n    // Wrap the entire text in a <div>\r\n    formattedText = `<div>${formattedText}</div>`;\r\n\r\n    // Return the formatted HTML\r\n    return formattedText;\r\n  }\r\n\r\n  return <div className=\"flex-1\">Chat</div>;\r\n}\r\n\r\nexport default Chat;\r\n"],"mappings":";;AAAA,SAASA,IAAIA,CAAC;EAAEC;AAAO,CAAC,EAAE;EACxB,MAAMC,EAAE,GAAGD,MAAM;EACjB;;EAEA,SAASE,wBAAwBA,CAACC,KAAK,EAAE;IACvC;IACA,IAAIC,aAAa,GAAGD,KAAK,CACtBE,OAAO,CAAC,cAAc,EAAE,aAAa,CAAC,CAAC;IAAA,CACvCA,OAAO,CAAC,eAAe,EAAE,aAAa,CAAC,CAAC;IAAA,CACxCA,OAAO,CAAC,uBAAuB,EAAE,sBAAsB,CAAC,CAAC;IAAA,CACzDA,OAAO,CAAC,aAAa,EAAE,aAAa,CAAC,CAAC;IAAA,CACtCA,OAAO,CACN,sBAAsB,EACtB,yCACF,CAAC,CAAC;IAAA,CACDA,OAAO,CAAC,SAAS,EAAE,eAAe,CAAC,CAAC;IAAA,CACpCA,OAAO,CACN,2BAA2B,EAC3B,+DACF,CAAC,CAAC;IAAA,CACDA,OAAO,CAAC,OAAO,EAAE,SAAS,CAAC,CAAC;IAAA,CAC5BA,OAAO,CAAC,KAAK,EAAE,OAAO,CAAC,CAAC,CAAC;;IAE5B;IACAD,aAAa,GAAG,QAAQA,aAAa,QAAQ;;IAE7C;IACA,OAAOA,aAAa;EACtB;EAEA,oBAAOE,OAAA;IAAKC,SAAS,EAAC,QAAQ;IAAAC,QAAA,EAAC;EAAI;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAK,CAAC;AAC3C;AAACC,EAAA,GA/BQd,IAAI;AAiCb,eAAeA,IAAI;AAAC,IAAAc,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
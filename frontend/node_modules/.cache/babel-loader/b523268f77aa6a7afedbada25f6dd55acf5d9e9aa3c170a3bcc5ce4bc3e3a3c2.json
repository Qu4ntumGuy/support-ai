{"ast":null,"code":"var _jsxFileName = \"D:\\\\Windows\\\\Web Apps\\\\GenAI\\\\frontend\\\\src\\\\Components\\\\UsersChat.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect } from \"react\";\nimport ChatRow from \"./ChatRow\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction UsersChat() {\n  _s();\n  const [chats, setChats] = React.useState([]);\n  const fetchChats = async () => {\n    try {\n      const res = await fetch(\"http://localhost:8000/api/usersChat\", {\n        method: \"GET\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Authorization: `Bearer ${localStorage.getItem(\"token\")}`\n        }\n      });\n      const data = await res.json();\n      console.log(data);\n      if (res.status === 200) {\n        setChats(data.chats);\n      }\n    } catch (error) {\n      console.log(error);\n    }\n  };\n  useEffect(() => {\n    fetchChats();\n  }, []);\n  const formatDate = toformat => {\n    const date = new Date(toformat);\n\n    // Options for formatting the date\n    const options = {\n      weekday: \"long\",\n      year: \"numeric\",\n      month: \"long\",\n      day: \"numeric\",\n      hour: \"2-digit\",\n      minute: \"2-digit\",\n      second: \"2-digit\",\n      timeZoneName: \"short\"\n    };\n\n    // Convert to human-readable format\n    const humanReadableDate = date.toLocaleDateString(\"en-US\", options);\n    const humanReadableTime = date.toLocaleTimeString(\"en-US\", options);\n    return humanReadableDate, humanReadableTime;\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"w-full border border-black h-96 rounded-lg mt-3\",\n    children: chats.map(chat => /*#__PURE__*/_jsxDEV(ChatRow, {\n      email: chat.email,\n      time: formatDate(chat.createdAt)\n    }, chat._id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 5\n  }, this);\n}\n_s(UsersChat, \"vytB8QcpLWFeZXbb4G/4rqAt8MY=\");\n_c = UsersChat;\nexport default UsersChat;\nvar _c;\n$RefreshReg$(_c, \"UsersChat\");","map":{"version":3,"names":["React","useEffect","ChatRow","jsxDEV","_jsxDEV","UsersChat","_s","chats","setChats","useState","fetchChats","res","fetch","method","headers","Authorization","localStorage","getItem","data","json","console","log","status","error","formatDate","toformat","date","Date","options","weekday","year","month","day","hour","minute","second","timeZoneName","humanReadableDate","toLocaleDateString","humanReadableTime","toLocaleTimeString","className","children","map","chat","email","time","createdAt","_id","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["D:/Windows/Web Apps/GenAI/frontend/src/Components/UsersChat.js"],"sourcesContent":["import React, { useEffect } from \"react\";\r\nimport ChatRow from \"./ChatRow\";\r\n\r\nfunction UsersChat() {\r\n  const [chats, setChats] = React.useState([]);\r\n\r\n  const fetchChats = async () => {\r\n    try {\r\n      const res = await fetch(\"http://localhost:8000/api/usersChat\", {\r\n        method: \"GET\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n          Authorization: `Bearer ${localStorage.getItem(\"token\")}`,\r\n        },\r\n      });\r\n      const data = await res.json();\r\n      console.log(data);\r\n      if (res.status === 200) {\r\n        setChats(data.chats);\r\n      }\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchChats();\r\n  }, []);\r\n\r\n  const formatDate = (toformat) => {\r\n    const date = new Date(toformat);\r\n\r\n    // Options for formatting the date\r\n    const options = {\r\n      weekday: \"long\",\r\n      year: \"numeric\",\r\n      month: \"long\",\r\n      day: \"numeric\",\r\n      hour: \"2-digit\",\r\n      minute: \"2-digit\",\r\n      second: \"2-digit\",\r\n      timeZoneName: \"short\",\r\n    };\r\n\r\n    // Convert to human-readable format\r\n    const humanReadableDate = date.toLocaleDateString(\"en-US\", options);\r\n    const humanReadableTime = date.toLocaleTimeString(\"en-US\", options);\r\n\r\n    return humanReadableDate, humanReadableTime;\r\n  };\r\n\r\n  return (\r\n    <div className=\"w-full border border-black h-96 rounded-lg mt-3\">\r\n      {chats.map((chat) => (\r\n        <ChatRow\r\n          key={chat._id}\r\n          email={chat.email}\r\n          time={formatDate(chat.createdAt)}\r\n        />\r\n      ))}\r\n      {/* <ChatRow />\r\n      <ChatRow />\r\n      <ChatRow />\r\n      <ChatRow /> */}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default UsersChat;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,QAAQ,OAAO;AACxC,OAAOC,OAAO,MAAM,WAAW;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEhC,SAASC,SAASA,CAAA,EAAG;EAAAC,EAAA;EACnB,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGR,KAAK,CAACS,QAAQ,CAAC,EAAE,CAAC;EAE5C,MAAMC,UAAU,GAAG,MAAAA,CAAA,KAAY;IAC7B,IAAI;MACF,MAAMC,GAAG,GAAG,MAAMC,KAAK,CAAC,qCAAqC,EAAE;QAC7DC,MAAM,EAAE,KAAK;QACbC,OAAO,EAAE;UACP,cAAc,EAAE,kBAAkB;UAClCC,aAAa,EAAE,UAAUC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;QACxD;MACF,CAAC,CAAC;MACF,MAAMC,IAAI,GAAG,MAAMP,GAAG,CAACQ,IAAI,CAAC,CAAC;MAC7BC,OAAO,CAACC,GAAG,CAACH,IAAI,CAAC;MACjB,IAAIP,GAAG,CAACW,MAAM,KAAK,GAAG,EAAE;QACtBd,QAAQ,CAACU,IAAI,CAACX,KAAK,CAAC;MACtB;IACF,CAAC,CAAC,OAAOgB,KAAK,EAAE;MACdH,OAAO,CAACC,GAAG,CAACE,KAAK,CAAC;IACpB;EACF,CAAC;EAEDtB,SAAS,CAAC,MAAM;IACdS,UAAU,CAAC,CAAC;EACd,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMc,UAAU,GAAIC,QAAQ,IAAK;IAC/B,MAAMC,IAAI,GAAG,IAAIC,IAAI,CAACF,QAAQ,CAAC;;IAE/B;IACA,MAAMG,OAAO,GAAG;MACdC,OAAO,EAAE,MAAM;MACfC,IAAI,EAAE,SAAS;MACfC,KAAK,EAAE,MAAM;MACbC,GAAG,EAAE,SAAS;MACdC,IAAI,EAAE,SAAS;MACfC,MAAM,EAAE,SAAS;MACjBC,MAAM,EAAE,SAAS;MACjBC,YAAY,EAAE;IAChB,CAAC;;IAED;IACA,MAAMC,iBAAiB,GAAGX,IAAI,CAACY,kBAAkB,CAAC,OAAO,EAAEV,OAAO,CAAC;IACnE,MAAMW,iBAAiB,GAAGb,IAAI,CAACc,kBAAkB,CAAC,OAAO,EAAEZ,OAAO,CAAC;IAEnE,OAAOS,iBAAiB,EAAEE,iBAAiB;EAC7C,CAAC;EAED,oBACEnC,OAAA;IAAKqC,SAAS,EAAC,iDAAiD;IAAAC,QAAA,EAC7DnC,KAAK,CAACoC,GAAG,CAAEC,IAAI,iBACdxC,OAAA,CAACF,OAAO;MAEN2C,KAAK,EAAED,IAAI,CAACC,KAAM;MAClBC,IAAI,EAAEtB,UAAU,CAACoB,IAAI,CAACG,SAAS;IAAE,GAF5BH,IAAI,CAACI,GAAG;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAGd,CACF;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAKC,CAAC;AAEV;AAAC9C,EAAA,CA/DQD,SAAS;AAAAgD,EAAA,GAAThD,SAAS;AAiElB,eAAeA,SAAS;AAAC,IAAAgD,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}